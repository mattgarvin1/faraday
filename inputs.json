{"message": "import json\nimport datetime\nimport sys\nimport inspect\ndef load(total_order_value: float):\n    \"\"\"\n    #### Load task\n    A simple Load task which takes in the result of the Transform task and\n    instead of saving it to end user review, just prints it out.\n    \"\"\"\n\n    print(f\"Total order value is: {total_order_value:.2f}\")\ndef transform(order_data_dict: dict):\n    \"\"\"\n    #### Transform task\n    A simple Transform task which takes in the collection of order data and\n    computes the total order value.\n    \"\"\"\n    total_order_value = 0\n\n    for value in order_data_dict.values():\n        total_order_value += value\n\n    return {\"total_order_value\": total_order_value}\ndef extract():\n    \"\"\"\n    #### Extract task\n    A simple Extract task to get data ready for the rest of the data\n    pipeline. In this case, getting data is simulated by reading from a\n    hardcoded JSON string.\n    \"\"\"\n    data_string = '{\"1001\": 301.27, \"1002\": 433.21, \"1003\": 502.22}'\n\n    order_data_dict = json.loads(data_string)\n    return order_data_dict\ndef tutorial_taskflow_api_etl():\n    \"\"\"\n    ### TaskFlow API Tutorial Documentation\n    This is a simple ETL data pipeline example which demonstrates the use of\n    the TaskFlow API using three simple tasks for Extract, Transform, and Load.\n    Documentation that goes along with the Airflow TaskFlow API tutorial is\n    located\n    [here](https://airflow.apache.org/docs/apache-airflow/stable/tutorial_taskflow_api.html)\n    \"\"\"\n\n    order_data = extract()\n    order_summary = transform(order_data)\n    load(order_summary[\"total_order_value\"])\n\ntutorial_taskflow_api_etl()"}